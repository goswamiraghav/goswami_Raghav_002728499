/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityDirectory;
import model.Community;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.NumVerify;
import model.StrVerify;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *

 */
public class HospitalFrame extends javax.swing.JFrame {

    /**
     * Creates new form HospitalFrame
     */
    CityDirectory storageOfCities;
    PersonDirectory storageOfPersons;
    PatientDirectory storageOfPatients;
    DoctorDirectory storageOfDoctors;
    HospitalDirectory storageOfHospitals;
    EncounterHistory storageofEncounters;
    Person User;
    public HospitalFrame() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
     public HospitalFrame( CityDirectory storageOfCities,
    PersonDirectory storageOfPersons,
    PatientDirectory storageOfPatients,
    DoctorDirectory storageOfDoctors,
    HospitalDirectory storageOfHospitals,
    EncounterHistory storageofEncounters,Person User) {
        initComponents();
        this.storageOfCities=storageOfCities;
        this.storageOfPersons=storageOfPersons;
        this.storageOfPatients=storageOfPatients;
        this.storageOfDoctors=storageOfDoctors;
        this.storageOfHospitals=storageOfHospitals;
        this.storageofEncounters=storageofEncounters;
        this.User=User;
        addVerifiers();
        populateTable();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
      private void addVerifiers() {
            InputVerifier integerVerifier = new NumVerify();
 
        InputVerifier stringVerifier = new StrVerify();
     txtCommunityID.setInputVerifier(integerVerifier);
    txtHospitalAddress.setInputVerifier(stringVerifier);
    txtHospitalID.setInputVerifier(integerVerifier);
     txtHospitalName.setInputVerifier(stringVerifier);
      
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        HospitalTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtHospitalID = new javax.swing.JTextField();
        txtHospitalName = new javax.swing.JTextField();
        txtCommunityID = new javax.swing.JTextField();
        txtHospitalAddress = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnldUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        HospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HospitalID", "Hospital Name", "Community ID", "Hospital Address"
            }
        ));
        jScrollPane1.setViewportView(HospitalTable);

        jLabel1.setText("HospitalID");

        jLabel2.setText("Hospital Name");

        jLabel3.setText("Community ID");

        jLabel4.setText("Hospital Address");

        txtHospitalID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalIDActionPerformed(evt);
            }
        });

        txtHospitalName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalNameActionPerformed(evt);
            }
        });

        txtCommunityID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommunityIDActionPerformed(evt);
            }
        });

        txtHospitalAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalAddressActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 255, 204));
        btnUpdate.setText("update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnldUpdate.setBackground(new java.awt.Color(204, 255, 204));
        btnldUpdate.setText("load to update");
        btnldUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnldUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 255, 204));
        btnDelete.setText("delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(204, 255, 204));
        btnView.setText("view ");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCommunityID, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(btnCreate)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnldUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnView)))
                        .addGap(0, 618, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCommunityID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnldUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnCreate)
                    .addComponent(btnView))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHospitalAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalAddressActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(User.getPersonType()=="sysadmin"){
         int selectedRowIndex=HospitalTable.getSelectedRow();
        System.out.println(selectedRowIndex);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"please select a row to delete.");
            return;
        }
         storageOfHospitals.deleteHos(selectedRowIndex);
         JOptionPane.showMessageDialog(this,"Hospital Deleted");
         populateTable();}
         
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if( txtCommunityID.getText().equals("")||
    txtHospitalAddress.getText().equals("")||
    txtHospitalID.getText().equals("")||
     txtHospitalName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Some the data provided is null"); 
           return;
        }
        long hospitalID=Long.valueOf(txtHospitalID.getText());
        long communityID=Long.valueOf(txtCommunityID.getText());
        String hospitalName=txtHospitalName.getText();
        String hospitalAddress=txtHospitalAddress.getText();
        boolean flag=false;
        for(Hospital h : storageOfHospitals.getInformation()){
            if(hospitalID==h.getHospitalID()){
                flag=true;
                JOptionPane.showMessageDialog(this,"CityID is not unique");
            }
        }
        boolean flag2=false;
        for(City c : storageOfCities.getInformation()){
            for(Community com : c.getCommunities()){
               if(communityID==com.getCommunityID()){
                   flag2=true;
               } 
            }
        }
        if(flag2==false){
            JOptionPane.showMessageDialog(this,"CommunityID is not existing rn");
        }
        if(flag==false && flag2==true){
        Hospital newHospital=storageOfHospitals.addNewHospital();
        newHospital.setCommunityID(communityID);
        newHospital.setHospitalID(hospitalID);
        newHospital.setHospitalName(hospitalName);
        newHospital.setHospitalAddress(hospitalAddress);
        
        JOptionPane.showMessageDialog(this,"new HOspital data added.");
        }

        txtHospitalID.setText("");
        txtCommunityID.setText("");
        txtHospitalName.setText("");
        txtHospitalAddress.setText("");
        populateTable();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtHospitalIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalIDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtHospitalIDActionPerformed

    private void txtHospitalNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalNameActionPerformed

    private void txtCommunityIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommunityIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommunityIDActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=HospitalTable.getSelectedRow();
        System.out.println(selectedRowIndex);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"please select a row to view.");
            return;
        }
         Hospital viewableData=storageOfHospitals.getInformation().get(selectedRowIndex);
         txtHospitalID.setText(String.valueOf(viewableData.getHospitalID()));
         txtCommunityID.setText(String.valueOf(viewableData.getCommunityID()));
         txtHospitalName.setText(viewableData.getHospitalName());
         txtHospitalAddress.setText(viewableData.getHospitalAddress());
    }//GEN-LAST:event_btnViewActionPerformed
   int RowIndex=-1;
    private void btnldUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnldUpdateActionPerformed
        // TODO add your handling code here:
        RowIndex=HospitalTable.getSelectedRow();
        System.out.println(RowIndex);
        if(RowIndex<0){
            JOptionPane.showMessageDialog(this,"please select a row to view.");
            return;
        }
         Hospital viewableData=storageOfHospitals.getInformation().get(RowIndex);
         txtHospitalID.setText(String.valueOf(viewableData.getHospitalID()));
         txtCommunityID.setText(String.valueOf(viewableData.getCommunityID()));
         txtHospitalName.setText(viewableData.getHospitalName());
         txtHospitalAddress.setText(viewableData.getHospitalAddress());
    }//GEN-LAST:event_btnldUpdateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
      if(RowIndex<0){
            JOptionPane.showMessageDialog(this,"please load data to be updated");
            return;
        }
         if( txtCommunityID.getText().equals("")||
    txtHospitalAddress.getText().equals("")||
    txtHospitalID.getText().equals("")||
     txtHospitalName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Some the data provided is null"); 
           return;
        }
     long hospitalID=Long.valueOf(txtHospitalID.getText());
        long communityID=Long.valueOf(txtCommunityID.getText());
        String hospitalName=txtHospitalName.getText();
        String hospitalAddress=txtHospitalAddress.getText();
    
     Hospital nd=storageOfHospitals.getInformation().get(RowIndex);
     nd.setHospitalName(hospitalName);
     nd.setHospitalAddress(hospitalAddress);
     JOptionPane.showMessageDialog(this,"updated but the ID's are not changeable");
     populateTable();
     RowIndex=-1;
    }//GEN-LAST:event_btnUpdateActionPerformed

         private void populateTable() {
        DefaultTableModel model=(DefaultTableModel) HospitalTable.getModel();
        model.setRowCount(0);
        for(Hospital ed : storageOfHospitals.getInformation()){
            Object[] row = new Object[11];
            row[0]=ed.getHospitalID();
            row[1]=ed.getHospitalName();
            row[2]=ed.getCommunityID();
            row[3]=ed.getHospitalAddress();
            model.addRow(row);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HospitalTable;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnldUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCommunityID;
    private javax.swing.JTextField txtHospitalAddress;
    private javax.swing.JTextField txtHospitalID;
    private javax.swing.JTextField txtHospitalName;
    // End of variables declaration//GEN-END:variables
}
