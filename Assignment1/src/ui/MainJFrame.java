/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import HRO.Employee;
import HRO.EmployeeHistory;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author raghavgoswami
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
    DefaultTableModel model;
    Employee e;
    //EmployeeHistory ch;
    
    EmployeeHistory history = new EmployeeHistory();
    public MainJFrame(Employee employee) {
        this.e = employee;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        splitPane = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        btnCreate = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        workArea = new javax.swing.JPanel();
        lblAge = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        txtStrDate = new javax.swing.JTextField();
        lblStrDate = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        lblLevel = new javax.swing.JLabel();
        txtTeamInfo = new javax.swing.JTextField();
        lblTeamInfo = new javax.swing.JLabel();
        txtPosTitle = new javax.swing.JTextField();
        lblPosTitle = new javax.swing.JLabel();
        txtCellPh = new javax.swing.JTextField();
        lblCellPh = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emptable = new javax.swing.JTable();
        lblImage = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        lblEmpID = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        searchtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnImage = new javax.swing.JButton();
        imagelbl = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanel.setBackground(new java.awt.Color(255, 255, 0));

        btnCreate.setBackground(new java.awt.Color(51, 255, 0));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRead.setBackground(new java.awt.Color(102, 255, 0));
        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(102, 255, 0));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        workArea.setBackground(new java.awt.Color(255, 255, 204));

        lblAge.setText("Age :");

        lblGender.setText("Gender :");

        lblStrDate.setText("Start Date :");

        lblLevel.setText("Level :");

        lblTeamInfo.setText("Team Info :");

        lblPosTitle.setText("Position Title :");

        lblCellPh.setText("Cellphone No :");

        lblEmail.setText("Email Address :");

        emptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "EmployeeID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position TItle", "Cellphone Number", "Email"
            }
        ));
        emptable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emptableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emptable);

        lblImage.setText("Image :");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblName.setText("Name:");

        lblEmpID.setText("Employee ID :");

        searchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtxtKeyReleased(evt);
            }
        });

        jLabel1.setText("Search");

        btnImage.setText("Image Upload");
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workAreaLayout = new javax.swing.GroupLayout(workArea);
        workArea.setLayout(workAreaLayout);
        workAreaLayout.setHorizontalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workAreaLayout.createSequentialGroup()
                        .addComponent(lblImage)
                        .addGap(253, 253, 253)
                        .addComponent(imagelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workAreaLayout.createSequentialGroup()
                        .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(workAreaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(workAreaLayout.createSequentialGroup()
                                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmpID)
                                    .addComponent(lblName)
                                    .addComponent(lblAge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtStrDate, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addComponent(txtGender)
                                    .addComponent(txtAge)
                                    .addComponent(txtName)
                                    .addComponent(txtEmpID))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workAreaLayout.createSequentialGroup()
                                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCellPh)
                                    .addComponent(lblPosTitle)
                                    .addGroup(workAreaLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTeamInfo)
                                            .addComponent(lblLevel)))
                                    .addComponent(lblEmail))
                                .addGap(62, 62, 62)
                                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPosTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(txtCellPh)
                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail))
                                .addGap(263, 263, 263))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workAreaLayout.createSequentialGroup()
                                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(227, 227, 227))))))
            .addGroup(workAreaLayout.createSequentialGroup()
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workAreaLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(workAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender)
                            .addComponent(lblStrDate))))
                .addGap(0, 79, Short.MAX_VALUE))
        );
        workAreaLayout.setVerticalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workAreaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLevel)
                        .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpID)
                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTeamInfo)
                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPosTitle)
                    .addComponent(txtPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGender)
                    .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCellPh)
                        .addComponent(txtCellPh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStrDate)
                    .addComponent(txtStrDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(53, 53, 53)
                .addGroup(workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImage)
                    .addComponent(btnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(370, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreate)
                    .addComponent(btnRead)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        controlPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnDelete, btnRead, btnUpdate});

        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnRead)
                        .addGap(26, 26, 26)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(workArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(365, Short.MAX_VALUE))
        );

        controlPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCreate, btnDelete, btnRead, btnUpdate});

        splitPane.setLeftComponent(controlPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("png","jpg","jpeg");
        filechooser.setFileFilter(filter);
        int fileselect = filechooser.showOpenDialog(null);

        if(fileselect == JFileChooser.APPROVE_OPTION)
        {
            File file = filechooser.getSelectedFile();
            //  Employee e = ch.newemployeehistory();
            e.setImageUpload(file.getAbsolutePath());
            //  String imageloc = e.getImageUpload();
            JOptionPane.showMessageDialog(null, "Image Uploaded.");

        }
    }//GEN-LAST:event_btnImageActionPerformed

    private void searchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtxtKeyReleased
        // TODO add your handling code here:
        String searchstring = searchtxt.getText();
        search(searchstring);
    }//GEN-LAST:event_searchtxtKeyReleased

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void emptableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emptableMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_emptableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedrow = emptable.getSelectedRow();
        if(selectedrow<0){
            JOptionPane.showMessageDialog(this, "Select a row to delete");
        }
        model = (DefaultTableModel) emptable.getModel();
        Employee selectedemployee =(Employee)model.getValueAt(selectedrow, 0);
        history.deleteemployees(selectedemployee);

        JOptionPane.showMessageDialog(this, "Employee deleted");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) emptable.getModel();
        Employee ch = history.newemployeehistory();
        String Name = txtName.getText();
        String EmployeeID = txtEmpID.getText();
        int Age = Integer.parseInt(txtAge.getText());
        String Gender = txtGender.getText();

        Date StartDate = new Date();
        SimpleDateFormat sdt = new SimpleDateFormat("yyyy-MM-dd");

        txtStrDate.setText(sdt.format(StartDate));
        int Level = Integer.parseInt(txtLevel.getText());
        String TeamInfo = txtTeamInfo.getText();
        String PositionTitle = txtPosTitle.getText();
        int CellPhone = Integer.parseInt(txtCellPh.getText());
        String Email = txtEmail.getText();
        if(txtName.getText()==null ||txtEmpID.getText()==null||txtGender.getText()==null||txtTeamInfo==null)
        {
            JOptionPane.showMessageDialog(this, "Field can't be empty");
        }
        else if(!(txtEmail.getText().matches("^(.+)@(\\S+)$"))){
            JOptionPane.showMessageDialog(this, "Email is not Valid");
        }
        else{

            ch.setName(Name);
            ch.setAge(Age);
            ch.setGender(Gender);
            ch.setEmployeeID(EmployeeID);
            ch.setCellPhone(CellPhone);
            ch.setEmail(Email);
            ch.setPositionTitle(PositionTitle);
            ch.setLevel(Level);
            ch.setEmail(Email);
            ch.setStartDate(StartDate);
            ch.setTeamInfo(TeamInfo);

            //           objs[1]=ch.getName();
            //            objs[2]=ch.getEmployeeID();
            //            objs[3]=ch.getAge();
            //            objs[4]=ch.getGender();
            //            objs[5]=ch.getStartDate();
            //            objs[6]=ch.getLevel();
            //            objs[7]=ch.getTeamInfo();
            //            objs[8]=ch.getPositionTitle();
            //            objs[9]=ch.getCellPhone();
            //            objs[10]=ch.getEmail();
            //
            model.setValueAt(Name, emptable.getSelectedRow(), 0);
            model.setValueAt(EmployeeID, emptable.getSelectedRow(), 1);
            model.setValueAt(Age, emptable.getSelectedRow(), 2);
            model.setValueAt(Gender, emptable.getSelectedRow(), 3);
            model.setValueAt(StartDate, emptable.getSelectedRow(), 4);
            model.setValueAt(Level, emptable.getSelectedRow(), 5);
            model.setValueAt(TeamInfo, emptable.getSelectedRow(), 6);
            model.setValueAt(PositionTitle,emptable.getSelectedRow(), 7);
            model.setValueAt(CellPhone,emptable.getSelectedRow(), 8);
            model.setValueAt(Email,emptable.getSelectedRow(), 9);

            txtName.setText("");
            txtEmpID.setText("");
            txtAge.setText("");
            txtStrDate.setText("");
            txtLevel.setText("");
            txtTeamInfo.setText("");
            txtLevel.setText("");
            txtCellPh.setText("");
            txtEmail.setText("");
            txtPosTitle.setText("");
            txtGender.setText("");

            JOptionPane.showMessageDialog(this, "Update successful");
            //        populateTable();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) emptable.getModel();

        String tblempname = emptable.getValueAt(emptable.getSelectedRow(), 0).toString();
        String tblempid = emptable.getValueAt(emptable.getSelectedRow(), 1).toString();
        String tblage = emptable.getValueAt(emptable.getSelectedRow(), 2).toString();
        String tblgender = emptable.getValueAt(emptable.getSelectedRow(), 3).toString();
        String tblstartdate = emptable.getValueAt(emptable.getSelectedRow(), 4).toString();
        String tbllevel = emptable.getValueAt(emptable.getSelectedRow(), 5).toString();
        String tblteaminfo = emptable.getValueAt(emptable.getSelectedRow(), 6).toString();
        String tblpostitle = emptable.getValueAt(emptable.getSelectedRow(), 7).toString();
        String tblcellno = emptable.getValueAt(emptable.getSelectedRow(), 8).toString();
        String tblemail = emptable.getValueAt(emptable.getSelectedRow(), 9).toString();

        txtName.setText(tblempname);
        txtEmpID.setText(tblempid);
        txtAge.setText(tblage);
        txtGender.setText(tblgender);
        txtStrDate.setText(tblstartdate);
        txtLevel.setText(tbllevel);
        txtTeamInfo.setText(tblteaminfo);
        txtPosTitle.setText(tblpostitle);
        txtCellPh.setText(tblcellno);
        txtEmail.setText(tblemail);

        ImageIcon myimage = new ImageIcon(e.getImageUpload());
        Image image = myimage.getImage();
        imagelbl.setIcon(new ImageIcon(image));
        // mainjframe.setVisible(true);
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String Name = txtName.getText();
        String EmployeeID = txtEmpID.getText();
        int Age = Integer.parseInt(txtAge.getText());
        String Gender = txtGender.getText();

        Date StartDate = new Date();
        SimpleDateFormat sdt = new SimpleDateFormat("yyyy-MM-dd");

        txtStrDate.setText(sdt.format(StartDate));
        int Level = Integer.parseInt(txtLevel.getText());
        String TeamInfo = txtTeamInfo.getText();
        String PositionTitle = txtPosTitle.getText();
        int CellPhone = Integer.parseInt(txtCellPh.getText());
        String Email = txtEmail.getText();

        Employee ch = history.newemployeehistory();
        if(txtName.getText()==null ||txtEmpID.getText()==null||txtGender.getText()==null||txtTeamInfo==null)
        {
            JOptionPane.showMessageDialog(this, "Field can't be empty");
        }
        else if(!(txtEmail.getText().matches("^(.+)@(\\S+)$"))){
            JOptionPane.showMessageDialog(this, "Email is not Valid");
        }
        //        else if(!(txtLevel.getText().matches("[+-]?[0-9]+")))
        //        {
            //            JOptionPane.showMessageDialog(this, "Enter valid level");
            //        }
        //        else if(!(txtAge.getText().matches("[+-]?[0-9]+")))
        //        {
            //            JOptionPane.showMessageDialog(this, "Enter valid Age");
            //        }
        //        else if(!(txtCellPh.getText().matches("[+-]?[0-9]+")))
        //        {
            //            JOptionPane.showMessageDialog(this, "Enter valid Cell Phone Number");
            //        }
        else{
            ch.setName(Name);
            ch.setAge(Age);
            ch.setGender(Gender);
            ch.setEmployeeID(EmployeeID);
            ch.setCellPhone(CellPhone);
            ch.setEmail(Email);
            ch.setPositionTitle(PositionTitle);
            ch.setLevel(Level);
            ch.setEmail(Email);
            ch.setStartDate(StartDate);
            ch.setTeamInfo(TeamInfo);
            populateTable();

            txtName.setText("");
            txtEmpID.setText("");
            txtAge.setText("");
            txtStrDate.setText("");
            txtGender.setText("");
            txtLevel.setText("");
            txtTeamInfo.setText("");
            txtLevel.setText("");
            txtCellPh.setText("");
            txtEmail.setText("");
            txtPosTitle.setText("");

        }
    }//GEN-LAST:event_btnCreateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Employee employee = new Employee();
                new MainJFrame(employee).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnImage;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JTable emptable;
    private javax.swing.JLabel imagelbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPh;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPosTitle;
    private javax.swing.JLabel lblStrDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPh;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPosTitle;
    private javax.swing.JTextField txtStrDate;
    private javax.swing.JTextField txtTeamInfo;
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        model = (DefaultTableModel) emptable.getModel();
        model.setRowCount(0);
        for(Employee ch : history.getEmployeehistory())
        {
            Object []objs= new Object[10];
            objs[0]= ch;
            objs[1]=ch.getEmployeeID();
            objs[2]=ch.getAge();
            objs[3]=ch.getGender();
            objs[4]=ch.getStartDate();
            objs[5]=ch.getLevel();
            objs[6]=ch.getTeamInfo();
            objs[7]=ch.getPositionTitle();
            objs[8]=ch.getCellPhone();
            objs[9]=ch.getEmail();
            model.addRow(objs);
            
        }
    }
    private void search(String str) {
        
        model = (DefaultTableModel) emptable.getModel();
            TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
            emptable.setRowSorter(trs);
            trs.setRowFilter(RowFilter.regexFilter(str));
    }
}





    
